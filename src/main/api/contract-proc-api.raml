#%RAML 1.0
title: Contract process API
version: "1.0"
mediaType: application/json
baseUri: http://localhost:8081/api/process/contracts
types:
  entitlement:
    type: !include datatypes/entitlement-datatype.raml
  ContractMaster:
    type: !include datatypes/contract-master-datatypes.raml
  Error:
    type: !include errormessages/error-messages.raml


protocols: [ HTTP, HTTPS ]
/:
  description: Fetch all the contracts based on the query parameters like name
  get:
    queryParameters:
#Based on query parameters of client
      state:
        type: string
        required: false
        description: Fetch the client details based on state
      city:
        type: string
        required: false
        description: Fetch the client details based on city
      zipcode:
        type: string
        required: false
        description: Fetch the client details based on zipcode
      clientName:
        type: string
        required: false
        description: Fetch the client details based on client name
      pocId:
        type: number
        required: false
        description: Fetch the customer details based on personId
      position:
        type: string
        required: false
        description: Fetch the client details based on position
      firstName:
        type: string
        required: false
        description: Fetch the client details based on firstName
      lastName:
        type: string
        required: false
        description: Fetch the client details based on lastName
      name:
        type: string
        required: false
        description: Fetch the client details based on name
#Query parameters based on offer process api
      entitlementName:
        type: string
        required: false
      productName:
        type: string
        required: false
#Query parameters based on contract system api
      productId:
        type: number
        required: false
      contractName:
        type: string
        required: false
      customerId:
        type: number
        required: false
    responses:
      200:
        body:
          application/json:
            type: ContractMaster[]

      400:
        description: When request is incorrect or with invalid parameters and server could not understand it.
        body:
          application/json:
            type: Error
            example: { "message" : "Bad Request", "code" : 400 }

  post:
    body:
      application/json:
        type: ContractMaster
        example: !include examples/contract-patch-example.json
    responses:
      201:
        headers:
          Location:
            description: URI pointing to the location of the newly created contact
            example: http://localhost:8081/api/process/contracts/123
      409:
        description: When you try to post the same record again.
        body:
          application/json:
            type: Error
            example: { "message" : "Conflict detected while inserting the record", "code" : 409 }
      400:
        description: When request is incorrect or with invalid parameters and server could not understand it.
        body:
          application/json:
            type: Error
            example: { "message" : "Bad request", "code" : 400 }
      
/{contractId}:
  displayName: contract id
  description: Fetch the contact information for the given contractId
  uriParameters:
    contractId:
      type: integer
      required: true
  get:
    headers:
        If-None-Match:
          type: string
          description: |
             The request will be processed only if the eventually existing resource's ETag doesn't match the value.
          example: bfc13a64729c4290ef5b2c2730249c88ca92d82d
    responses:
      200:
        body:
          application/json:
            type: ContractMaster
            example: !include examples/contract-master-example.json
        headers:
            ETag:
              displayName: ETag
              description: The current version of the resource
              type: string
              example: c7493-d7-a6b64d37f6cc3
      400:
        description: When request is incorrect or with invalid parameters and server could not understand it.
        body:
          application/json:
            type: Error
            example: { "message" : "Bad request", "code" : 400 }
      404:
        description: If there is no record found
        body:
          application/json:
            type: Error
            example: { "message" : "Resource not found", "code" : 404 }
      304:
          description: If the value you send in If-None-Match matches with resource's ETag, you have the latest record.
          body:
           application/json:
            type: Error
            example: { "message" : "Not Modified", "code" : 304 }
  delete:
    description: To delete a particular contact
    responses:
      204:
        description: "Contract has been successfully deleted!"
      400:
        description: When request is incorrect or with invalid parameters and server could not understand it.
        body:
          application/json:
            type: Error
            example: { "message" : "Bad request", "code" : 400 }
      404:
        description: If there is no record found
        body:
          application/json:
            type: Error
            example: { "message" : "Resource not found", "code" : 404 }
  patch:
    headers:
      If-Match:
          type: string
          description: |
            defines a precondition for updating the resource only if the versions match that header
          example: c7493-d7-a6b64d37f6cc3
      product-If-Match:
          type: string
          required: false
          example: c7493-d7-a6b64d37f6cc3
      person-If-Match:
          type: string
          required: false
          example: c7493-d7-a6b64d37f6cc3
      If-None-Match:
        type: string
        description: |
             The request will be processed only if the eventually existing resource's ETag doesn't match the value.
        example: bfc13a64729c4290ef5b2c2730249c88ca92d82d
        
    body:
      application/json:
        type: ContractMaster
        example: !include examples/contract-patch-example.json
    responses:
      204:
        description: "The contact has been successfully updated!"
        headers:
            ETag:
              displayName: ETag
              description: The current version of the resource
              type: string
              example: c7493-d7-a6b64d37f6cc3
      400:
        description: When request is incorrect or with invalid parameters and server could not understand it.
        body:
          application/json:
            type: Error
            example: { "message" : "Bad request", "code" : 400 }
      404:
        description: If there is no record found
        body:
          application/json:
            type: Error
            example: { "message" : "Resource not found", "code" : 404 }
      412:
          description: If If-Match value doesn't match with resource's etag, you need to get latest version of the record.
          headers:
            ETag:
              displayName: ETag
              description: The new version of the resource
              type: string
              example: c7493-d7-a6b64d37f6cc3
          body:
            application/json:
              type: Error
              example: { "message" : "Failed to modify. The resource has been modified by other process. please use GET /contracts/123 to retrieve the latest version of the resource.", "code" : 412 }