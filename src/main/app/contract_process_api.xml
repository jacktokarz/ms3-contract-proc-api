<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
    <flow name="delete_contract_process">
        <choice doc:name="maybe delete product">
            <when expression="#[message.inboundProperties.'http.query.params'.productId != null]">
                <http:request config-ref="Shared_JSD_HTTP_Request_Configuration" path="${offer.path}/{productId}" method="DELETE" doc:name="HTTP">
                    <http:request-builder>
                        <http:uri-param paramName="productId" value="#[message.inboundProperties.'http.query.params'.productId]"/>
                        <http:header headerName="If-Match" value="#[message.inboundProperties.'If-Match']"/>
                    </http:request-builder>
                </http:request>
            </when>
            <otherwise>
                <logger message="contract_process delete: productId not set, not deleting a product." level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
        <logger message="contract_process delete: past product" level="INFO" doc:name="Logger"/>
        <choice doc:name="Maybe Delete Client">
            <when expression="#[message.inboundProperties.'http.query.params'.customer_id != null]">
                <http:request config-ref="Shared_JSD_HTTP_Request_Configuration" path="${client.path}/{customer_id}" method="DELETE" doc:name="HTTP">
                    <http:request-builder>
                        <http:uri-param paramName="customer_id" value="#[message.inboundProperties.'http.query.params'.customer_Id]"/>
                        <http:header headerName="If-Match" value="#[message.inboundProperties.'If-Match']"/>
                    </http:request-builder>
                </http:request>
            </when>
            <otherwise>
                <logger message="contract_process delete: No customer id defined, none deleted." level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
        <logger message="contract_process delete: past client" level="INFO" doc:name="Logger"/>
        <http:request config-ref="Shared_JSD_HTTP_Request_Configuration" path="${contract.path}/{contract_id}" method="DELETE" doc:name="HTTP">
            <http:request-builder>
                <http:uri-param paramName="contract_id" value="#[flowVars.contract_id]"/>
                <http:header headerName="If-Match" value="#[message.inboundProperties.'If-Match']"/>
            </http:request-builder>
        </http:request>
        <logger message="contract_process delete: All deleted" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="update\patch_contract_process">
        <set-variable variableName="params" value="#[message.inboundProperties.'http.query.params']" doc:name="save params"/>
        <set-session-variable variableName="inbound" value="#[message.inboundProperties]" doc:name="Save inbounds"/>
        <choice doc:name="maybe update customer">
            <when expression="#[message.inboundProperties.'http.query.params'.customer_id !=null]">
                <http:request config-ref="Shared_JSD_HTTP_Request_Configuration" path="${client.path}/{customer_id}" method="PATCH" doc:name="HTTP">
                    <http:request-builder>
                        <http:query-params expression="#[message.inboundProperties.'http.query.params']"/>
                        <http:uri-param paramName="customer_id" value="#[message.inboundProperties.'http.query.params'.customer_id]"/>
                        <http:header headerName="If-Match" value="#[message.inboundProperties.'If-Match']"/>
                    </http:request-builder>
                </http:request>
            </when>
            <otherwise>
                <logger message="There is no customer id, nothing in client should be updated." level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
        <logger message="Client update is completed." level="INFO" doc:name="Logger"/>
        <choice doc:name="maybe update offer">
            <when expression="#[message.inboundProperties.'http.query.params'.product_id != null]">
                <expression-component doc:name="Expression"><![CDATA[
java.util.HashMap entitlements = new java.util.HashMap();
		for(Object obj: message.inboundProperties.'http.query.params'.entrySet()) {
			if(obj.getKey().contains("entitlement_")) {
				entitlements.put(obj.getKey(), obj.getValue() );
			}
		}
		flowVars.entitlements= entitlements;]]></expression-component>
                <http:request config-ref="Shared_JSD_HTTP_Request_Configuration" path="${offer.path}/{productId}" method="PATCH" doc:name="HTTP">
                    <http:request-builder>
                        <http:query-param paramName="name" value="#[sessionVars.inbound.'http.query.params'.product_name]"/>
                        <http:query-param paramName="description" value="#[sessionVars.inbound.'http.query.params'.product_description]"/>
                        <http:query-params expression="#[flowVars.entitlements]"/>
                        <http:uri-param paramName="productId" value="#[sessionVars.inbound.'http.query.params'.product_id]"/>
                        <http:header headerName="If-Match" value="#[sessionVars.inbound.'product-If-Match']"/>
                        <http:header headerName="Content-Type" value="application/json"/>
                    </http:request-builder>
                </http:request>
            </when>
            <otherwise>
                <logger message="No product id, no need to patch offer." level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
        <logger message="Offer patch done." level="INFO" doc:name="Logger"/>
        <http:request config-ref="Shared_JSD_HTTP_Request_Configuration" path="${contract.path}/{contract_id}" method="PATCH" doc:name="HTTP">
            <http:request-builder>
                <http:query-param paramName="name" value="#[sessionVars.inbound.'http.query.params'.contract_name]"/>
                <http:query-param paramName="description" value="#[sessionVars.inbound.'http.query.params'.contract_description]"/>
                <http:query-param paramName="sow" value="#[sessionVars.inbound.'http.query.params'.sow]"/>
                <http:query-param paramName="entitlement_update_list" value="#[sessionVars.inbound.'http.query.params'.entitlement_update_list]"/>
                <http:query-param paramName="start_date" value="#[sessionVars.inbound.'http.query.params'.start_date]"/>
                <http:query-param paramName="end_date" value="#[sessionVars.inbound.'http.query.params'.end_date]"/>
                <http:uri-param paramName="contract_id" value="#[flowVars.contract_id]"/>
                <http:header headerName="If-Match" value="#[sessionVars.inbound.'If-Match']"/>
                <http:header headerName="Content-Type" value="application/json"/>
            </http:request-builder>
        </http:request>
        <logger message="Contract patch done." level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="select\get_by_id_contract_process">
        <http:request config-ref="Shared_JSD_HTTP_Request_Configuration" path="${contract.path}/{contract_id}" method="GET" doc:name="Get contract from sys">
            <http:request-builder>
                <http:uri-param paramName="contract_id" value="#[flowVars.contract_id]"/>
                <http:header headerName="If-None-Match" value="#[message.inboundProperties.'If-None-Match']"/>
            </http:request-builder>
        </http:request>
        <dw:transform-message doc:name="Save contract" metadata:id="54b10413-5fb2-4c6c-bcc6-dba29bcc3d76">
            <dw:input-payload mimeType="application/json"/>
            <dw:set-variable variableName="contract"><![CDATA[%dw 1.0
%output application/java
---
{
	contract: {
		id: payload.id[0],
		name: payload.name[0],
		description: payload.description[0],
		start_date: payload.start_date[0],
		end_date: payload.end_date[0],
		entitlement_update_list: payload.entitlement_update_list map ((entitlementupdatelist , indexOfEntitlementupdatelist) -> entitlementupdatelist),
		escalation_contact_id: payload.escalation_contact_id[0],
		customer_id: payload.customer_id[0],
		product_id: payload.product_id[0],
		sow: payload.sow[0]
	}
}]]></dw:set-variable>
        </dw:transform-message>
        <logger message="saved: #[flowVars.contract]" level="INFO" doc:name="Logger"/>
        <http:request config-ref="Shared_JSD_HTTP_Request_Configuration" path="${offer.path}/{productId}" method="GET" doc:name="Get offer from process">
            <http:request-builder>
                <http:uri-param paramName="productId" value="#[flowVars.contract.contract.product_id]"/>
                <http:header headerName="If-None-Match" value="#[message.inboundProperties.'If-None-Match']"/>
            </http:request-builder>
        </http:request>
        <dw:transform-message doc:name="Transform Message" metadata:id="e9c979f4-a759-40e4-9666-91d0fedd5bc6">
            <dw:input-payload mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	contract: flowVars.contract.contract,
	offers: {
		product_id: payload.product_id,
		product_name: payload.product_name,
		product_description: payload.product_description,
		entitlements: payload.product_entitlements
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <logger message="Got a contract: #[payload]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="select\get_all_contract_process">
        <choice doc:name="Get All Contract Id's">
            <when expression="#[message.inboundProperties.'http.query.params'.contract_name != null]">
                <db:select config-ref="MySQL_Config" doc:name="Filtered By Name Get All">
                    <db:parameterized-query><![CDATA[SELECT id from contract WHERE name= #[message.inboundProperties.'http.query.params'.contract_name]]]></db:parameterized-query>
                </db:select>
            </when>
            <otherwise>
                <db:select config-ref="MySQL_Config" doc:name="Database">
                    <db:parameterized-query><![CDATA[SELECT id FROM contract]]></db:parameterized-query>
                </db:select>
            </otherwise>
        </choice>
        <set-variable variableName="contracts" value="#[new java.util.ArrayList()]" doc:name="Save empty contract holder" mimeType="application/json"/>
        <logger message="contract process get all: got all contract id's: #[payload]" level="INFO" doc:name="Logger"/>
        <foreach doc:name="For Each">
            <set-variable variableName="contract_id" value="#[payload.id]" doc:name="Variable" mimeType="application/json"/>
            <flow-ref name="select\get_by_id_contract_process" doc:name="select\get_by_id_contract_process"/>
            <expression-transformer expression="#[flowVars.contracts.add(payload)]" doc:name="Expression" mimeType="application/json"/>
        </foreach>
        <logger message="contract process get all: Got all contracts: #[flowVars.contracts]" level="INFO" doc:name="Logger"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
flowVars.contracts]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="insert\post_contract_process">
        <set-session-variable variableName="params" value="#[message.inboundProperties.'http.query.params']" doc:name="Session Variable"/>
        <choice doc:name="Check for incoming product_id">
            <when expression="#[sessionVars.params.product_id == null]">
                <expression-component doc:name="Save entitlements"><![CDATA[java.util.HashMap entitlements = new java.util.HashMap();
		for(Object obj: sessionVars.params.entrySet()) {
			if(obj.getKey().contains("entitlement_")) {
				entitlements.put(obj.getKey(), obj.getValue() );
			}
		}
flowVars.entitlements= entitlements;]]></expression-component>
                <http:request config-ref="Shared_JSD_HTTP_Request_Configuration" path="${offer.path}" method="POST" doc:name="make offer">
                    <http:request-builder>
                        <http:query-param paramName="name" value="#[sessionVars.params.product_name]"/>
                        <http:query-param paramName="description" value="#[sessionVars.params.product_description]"/>
                        <http:query-params expression="#[flowVars.entitlements]"/>
                        <http:header headerName="content-type" value="application/json"/>
                    </http:request-builder>
                </http:request>
                <set-session-variable variableName="product_id" value="#[message.inboundProperties.'http.query.params'.passed_product_id]" doc:name="Session Variable"/>
                <logger message="contract_process_post: Offer Created" level="INFO" doc:name="Logger"/>
            </when>
            <otherwise>
                <set-session-variable variableName="product_id" value="#[sessionVars.params.product_id]" doc:name="Session Variable"/>
                <http:request config-ref="Shared_JSD_HTTP_Request_Configuration" path="${offer.path}/{productId}" method="GET" doc:name="HTTP">
                    <http:request-builder>
                        <http:uri-param paramName="productId" value="#[sessionVars.params.product_id]"/>
                        <http:header headerName="if-none-match" value="#[message.inboundProperties.'if-none-match']"/>
                        <http:header headerName="content-type" value="application/json"/>
                    </http:request-builder>
                </http:request>
                <logger message="contract_process_post: Offer Already exists" level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
        <logger message="Placeholder for Client Creation" level="INFO" doc:name="Placeholder for Client Creation"/>
        <choice doc:name="Check for incoming customer_id">
            <when expression="#[sessionVars.params.customer_id == null]">
                <logger message="Filler for making a customer" level="INFO" doc:name="Standing in for calling post on customer_offer"/>
            </when>
            <otherwise>
                <logger message="didn't have to make a customer because was passed a customer_id" level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
        <choice doc:name="Check for incoming contract_id">
            <when expression="#[sessionVars.params.contract_id == null]">
                <http:request config-ref="Shared_JSD_HTTP_Request_Configuration" path="${contract.path}" method="POST" doc:name="Make Contract">
                    <http:request-builder>
                        <http:query-param paramName="description" value="#[sessionVars.params.contract_name]"/>
                        <http:query-param paramName="sow" value="#[sessionVars.params.sow]"/>
                        <http:query-param paramName="start_date" value="#[sessionVars.params.start_date]"/>
                        <http:query-param paramName="end_date" value="#[sessionVars.params.end_date]"/>
                        <http:query-param paramName="entitlement_update_list" value="#[sessionVars.params.entitlement_update_list]"/>
                        <http:query-param paramName="escalation_contact_id" value="#[sessionVars.params.escalation_contact_id]"/>
                        <http:query-param paramName="product_id" value="#[sessionVars.product_id]"/>
                        <http:query-param paramName="customer_id" value="#[flowVars.passed_customer_id]"/>
                    </http:request-builder>
                </http:request>
                <logger message="contract_process_POST: made contract" level="INFO" doc:name="Logger"/>
            </when>
            <otherwise>
                <http:request config-ref="Shared_JSD_HTTP_Request_Configuration" path="${contract.path}/{contract_id}" method="GET" doc:name="HTTP">
                    <http:request-builder>
                        <http:uri-param paramName="contract_id" value="#[sessionVars.params.contract_id]"/>
                        <http:header headerName="if-none-match" value="#[message.inboundProperties.'if-none-match']"/>
                        <http:header headerName="content-type" value="application/json"/>
                    </http:request-builder>
                </http:request>
                <logger message="contract_process_post: Received contract_id, no need to make new contract." level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
    </flow>
</mule>
